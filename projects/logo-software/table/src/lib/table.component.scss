/**
 * @license
 * Copyright LOGO YAZILIM SANAYİ VE TİCARET A.Ş. All Rights Reserved.
 *
 * Save to the extent permitted by law, you may not use, copy, modify,
 * distribute or create derivative works of this material or any part
 * of it without the prior written consent of LOGO YAZILIM SANAYİ VE TİCARET A.Ş. Limited.
 * Any reproduction of this material must contain this notice.
 */
@import "icons";
@import "~@logo-software/theme/base";

$font-family: "Nunito", sans-serif;
$thead-background-color: #0090ff;
$thead-border-color: #0076ff;
$thead-filter-background-color: #0069e3;
$thead-input-background: #f2f4f9;
$thead-input-color: #8c92a1;
$td-font-color: #4a4a4a;
$table-border-color: lighten($thead-background-color, 30);
$table-odd-background: #f9f9ff;
$table-even-background: #ffffff;
$button-accept-bg-color: #01cc78;
$button-cancel-bg-color: #ffffff;
$button-border-color: #e5e5e5;
$button-hover-background-color: #fafafa;
$box-shadow: 0 0 4px 0 rgba(0, 0, 0, 0.2);
$border-radius: 2px;
$border-width: 1px;
$button-selected: #0090ff;
$expanded-background-color: #dddde8;
$success-color: #01cc78;

@mixin animate($time:0.1s, $event: all, $animate:linear) {
  transition: $event $time $animate;
}

:host {
  display: block;

  ::ng-deep {
    display: block;

    .table-actions {
      display: flex;

      button {
        margin: size(10px) 0 size(10px) size(10px);
      }
    }

    .table-container {
      position: relative;
      overflow: auto;
      font-family: $font-family;

      table {
        @extend %table;

        border-collapse: separate;
        border-spacing: 0;
        width: 100%;
        position: relative;

        thead {
          tr {
            th {
              top: 0;
              z-index: 0;
              white-space: nowrap;
              text-align: left;

              &.sort {
                cursor: pointer;
              }

              &.index {
                min-width: size(20px);
                text-align: center;
              }

              &.th-arrow_down {
                &::after {
                  @include animate();

                  height: size(7px);
                  width: size(10px);
                }
              }

              &.th-arrow_up {
                &::after {
                  @include animate();

                  height: size(7px);
                  width: size(10px);
                }
              }

              &.filter {
                text-align: center;

                label {
                  display: block;
                  padding: 0;

                  input {
                    width: 100%;
                  }
                }
              }

              &.checkbox {
                text-align: center;
              }

              &:last-child {
                border: none;
              }
            }

            &:first-child th {
              z-index: 1;
            }
          }
        }

        tbody {
          tr {
            td {
              border-top-width: 0;
              border-bottom-width: 0;
              box-sizing: border-box;
              height: size(get("element.table.size.medium.min-height"));

              button {
                margin-right: size(4px);

                &.expander {
                  background-color: white;
                  color: var(--primary);
                  border: none;

                  &:focus {
                    background-color: white;
                  }
                }
              }

              &.checkbox {
                text-align: center;
              }

              &.index {
                text-align: center;
                background-color: var(#{get("element.table.header.background-color")});
                color: var(get("element.table.font.color"));
              }

              div.content-container {
                display: flex;
                align-items: center;
                width: 100%;
                height: 100%;
                box-sizing: border-box;

                .content {
                  display: flex;
                  flex-grow: 1;
                  align-items: center;
                  width: 100%;
                  height: 100%;
                  position: relative;

                  input {
                    @extend %bordered;

                    width: 100%;
                    cursor: pointer;
                    min-width: 70px;
                  }

                  button {
                    display: none;
                    z-index: 1;
                    box-sizing: border-box;
                    background-color: white;
                  }
                }

                &:hover {
                  button.edit-pen {
                    @extend %size-small;

                    position: absolute;
                    display: inline-block;
                    right: 0;
                    margin-right: size(4px);
                    color: var(--primary);
                    border: size(1px) solid var(--gray);
                    padding: 0;
                  }
                }
              }

              &.edit-focus, &:focus {
                box-shadow: $box-shadow;

                div.content-container {
                  .content {
                    input {
                      ~ button.edit-accept {
                        display: inline-block;
                        background-color: $success-color;
                        border: none;

                        &::before {
                          background-color: white;
                        }
                      }

                      ~ button.edit-cancel {
                        display: inline-block;
                        color: var(--danger);
                        border: size(1px) solid var(--gray);
                        margin-left: size(5px);
                      }

                      ~ button.edit {
                        background-color: white;
                        display: none;
                      }
                    }
                  }
                }
              }
            }

            &:last-child {
              td {
                border-bottom: none;
              }
            }

            &.new-line {
              background-color: rgba(255, 255, 0, 0.2);
            }

            &.expanded {
              // background-color: var(#{get("element.table.expanded.background-color")});
              background-color: var(#{get("element.table.expanded.backround-color")}) !important;

              td.expanded-td {
                padding: #{get("element.table.expanded.padding")};
              }
            }
          }
        }

        .no-data {
          text-align: center;
        }
      }
    }

    input[type="date"]::-webkit-calendar-picker-indicator {
      opacity: 0.4;
    }
  }

  @each $size, $value in get("element.table.size") {
    &.#{$size} {
      ::ng-deep {
        .table-container {
          table {
            tbody {
              td {
                height: size(get("element.table.size.small.min-height"));

                button, input:not([type="checkbox"]):not([type="radio"]), select {
                  @extend %size-#{if($size == "small", small, medium)};

                  box-sizing: border-box;
                }
              }
            }
          }
        }
      }
    }
  }

  @extend %table-variation;
}

:host.no-bootstrap {
  .table {
    margin-bottom: 0;

    label {
      align-items: center;
      justify-content: center;
      display: flex;
      margin-bottom: 0;
    }

    thead {
      th {
        border-top: 0;
        border-bottom: 0;
        vertical-align: inherit;
        margin: 0;
      }
    }
  }

  table.table-editing tbody tr td {
    &.editing {
      box-sizing: border-box;
      background-color: var(--success-100);
    }
  }
}
