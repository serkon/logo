input, textarea {
  @extend %input;
}

input:not([type=checkbox]), input:not([type=radio]) {
  &:read-only {
    background-color: get("element.input.readonly.background.color");
  }
}

textarea {
  @extend %textarea;
}

/**
Checkbox
 */
input[type=checkbox] {
  @extend %checkbox;
}

/**
Radio
*/
input[type=radio] {
  border-radius: 50%;
}

input[type=checkbox], input[type=radio] {
  @extend %check-radio;
  @extend %check-radio-medium;
}

.input-w-icon {
  position: relative;

  span {
    display: inline-block;
    position: absolute;
    height: 100%;
    width: size(get("size.medium.icon-container") - 2px);
    min-width: size(get("size.medium.icon-container") - 2px);
    z-index: 1;
    top: 0;
    color: var(--neutral-400);
  }

  input {
    width: 100%;
  }

  &.left {
    input {
      text-indent: size(get("element.input.size.medium.padding"));
    }

    span {
      left: 0;
      border-right: 1px solid var(--basic-700);
    }
  }

  &.right {
    span {
      right: 0;
      border-left: 1px solid var(--basic-700);
    }
  }

  @each $size, $value in get("element.input.size") {
    &.#{$size} {
      &.left {
        input {
          text-indent: size(map-get($value, "padding"));
        }
      }

      &.right {
        input {
          padding-right: size(map-get($value, "padding"));
        }
      }

      span {
        @extend %icon-#{$size};

        width: calc(#{get("size."+$size+".icon-container")} - 2px);
        min-width: calc(#{get("size."+$size+".icon-container")} - 2px);
      }
    }
  }
}
