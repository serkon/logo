%table {
  tr {
    th, td {
      font-family: get("font.family");

      input {
        margin: 0;
      }

      &:first-child {
        .custom-checkbox {
          display: flex;
          align-items: center;
          justify-content: center;
          margin-right: 0 !important;

          input {
            margin-right: 0;
          }

          label {
            display: none;
          }
        }
      }
    }

    th {
      position: relative;
      background-color: var(#{get("element.table.header.background-color")});
      color: var(#{get("element.table.font.color")});
      border: 0;
      font-weight: 700;
      border-radius: 0;
      padding: size(get("element.table.size.small.header.padding.top")) size(get("element.table.size.small.header.padding.right")) size(get("element.table.size.small.header.padding.bottom")) size(get("element.table.size.small.header.padding.left"));
      font-size: size(get("element.table.font.size"));
      line-height: size(get("element.table.font.line-height"));
      height: size(get("element.table.size.small.min-height"));
      box-sizing: border-box;
    }

    td {
      font-weight: normal;
      color: var(#{get("font.color.name")}-#{get("font.color.value")});
      border: size(1px) solid transparent;
      border-right: size(1px) solid var(--basic-500);
      padding: size(get("element.table.size.small.body.padding.top")) size(get("element.table.size.small.body.padding.right")) size(get("element.table.size.small.body.padding.bottom")) size(get("element.table.size.small.body.padding.left"));
      font-size: size(get("element.table.font.size"));
      line-height: size(get("element.table.font.line-height"));
      height: size(get("element.table.size.small.min-height"));
      box-sizing: border-box;

      &:last-of-type {
        border-right: 0;
      }
    }

    &:nth-of-type(1) {
      th {
        position: sticky;
        z-index: 2;
      }
    }

    &:nth-of-type(2) {
      th {
        background-color: var(#{get("element.table.filter.background-color")});
      }
    }

    &:nth-child(even) {
      background-color: var(--basic-300);
    }

    &:nth-child(odd) {
      background-color: var(--white);
    }

    &.selected {
      background-color: var(--primary-300);

      > td {
        border-right-color: var(--primary-300);
      }
    }

    &:hover {
      > td {
        background-color: rgba(var(--primary-100-rgb), 0.7);
        border-right-color: rgba(var(--primary-100-rgb), 0.1);
      }
    }

    &:last-child {
      td {
        border-bottom: 0;
      }
    }
  }
}

%table-variation {
  @each $color, $value in get("color.list") {
    &.#{"" + $color} {
      // background-color: if($color=="basic", var(--basic-600), var(--#{$color}));
      background-color: transparent;

      &:hover, &:focus, &:active {
        background-color: transparent;
        box-shadow: none;
      }

      table {
        th {
          background-color: if($color=="basic", var(--#{$color}-600), var(--#{$color}));
          color: if($color=="basic", var(--neutral-600), var(--white)) !important;
          // border-right: size(1px) solid var(--#{"" + $color}-700);
        }
      }
    }
  }

  @each $size, $value in get("size") {
    &.#{"" + $size} {
      height: auto;

      table {
        th {
          padding: size(get("element.table.size."+#{$size}+".header.padding.top")) size(get("element.table.size."+#{$size}+".header.padding.right"));
          box-sizing: border-box;
        }

        td {
          padding: size(get("element.table.size."+#{$size}+".body.padding.top")) size(get("element.table.size."+#{$size}+".body.padding.right"));
          height: size(get("element.table.size."+#{$size}+".min-height"));
          box-sizing: border-box;
        }
      }
    }
  }
}
