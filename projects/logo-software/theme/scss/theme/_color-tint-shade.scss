/**
Make Tint Color
 */
@function tint($color, $percentage) {
  @return mix(white, $color, $percentage);
}

/**
Make Shade Color
 */
@function shade($color, $percentage) {
  @return mix(black, $color, $percentage);
}

/**
Make more darken after shade
 */
@function shader($color, $percentage) {
  $color: shade($color, $percentage);
  // $color: darken($color, 5%);
  // $color: saturate($color, 15%);
  @return $color;
}


/**
Make more darken after tint
 */
@function tinter($color, $percentage) {
  $color: tint($color, $percentage);
  // $color: darken($color, 5%);
  // $color: lighten($color, 1%);
  // $colorm: saturate($colorm, 15%);
  @return $color;
}

/**
Get color from map
 */
@function color($color) {
  @return map-get($colors, $color);
}

/**
Color status generator - Color Hover Active Focus
 */
@function CHAF($name, $color-list) {
  $map: ();
  $map: map-merge($map,
    (
      "#{$name}-hover": map-get($color-list, #{$name}-#{get("color.shade-state.hover")}),
      "#{$name}-active": map-get($color-list, #{$name}-#{get("color.shade-state.active")}),
      "#{$name}-focus": map-get($color-list, #{$name}-#{get("color.shade-state.focus")}),
    )
  );
  @return $map;
}

/**
Convert HEX code to RGB strings
*/
@function hexToRGB($hex, $ney) {
  @return red($hex), green($hex), blue($hex);
}

/**
Merge color lists
 */
@function map-collect($maps...) {
  $collection: ();
  @each $map in $maps {
    $collection: map-merge($collection, $map);
  }
  @return $collection;
}

@function shadeAndTint($color-name, $hex) {
  $map: ("#{$color-name}": $hex);
  @each $shade-name, $value in get("color.shades") {
    $map: map-merge($map, (if($shade-name >= 500, ("#{$color-name}-#{$shade-name}": shader($hex, $value)), ("#{$color-name}-#{$shade-name}": tinter($hex, $value)))));
  }
  @return $map;
}

/**
Color generate
 */
$generate: ();
@each $color-name, $hex-value in get("color.list") {
  $generate: map-merge($generate, shadeAndTint($color-name, $hex-value));
  $generate: map-merge($generate, CHAF($color-name, $generate));
}

$colors: map-merge($colors, $generate);

$outline: (
  "outline": transparent,
  "outline-hover": color(light-hover),
  "outline-active": color(light-active),
  "outline-focus": color(light-focus),
);

$ghost: (
  "ghost-hover": get("color.state-bg-tranparency.hover"),
  "ghost-active": get("color.state-bg-tranparency.active"),
  "ghost-focus": get("color.state-bg-tranparency.focus"),
);

$gray: (
  "white": #ffffff,
  "light-grey": color(gray-300),
  "middle-grey": color(gray-400),
  "grey": color(gray-500),
  "dark-grey": color(gray-600),
  "black": #000000,
);

$colors: map-collect($colors, $outline, $ghost, $gray);
