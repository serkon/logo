/**
 * @license
 * Copyright Logo Yaz覺l覺m. All Rights Reserved.
 *
 * Save to the extent permitted by law, you may not use, copy, modify,
 * distribute or create derivative works of this material or any part
 * of it without the prior written consent of Logo Yaz覺l覺m.
 * Any reproduction of this material must contain this notice.
 */
$config: if(not variable-exists(config), (), $config);
$config: deep-map-merge((
  root: ":root",
  selector: ":root",
  customize: (
    status: true,
    state:(
      background: --text-900
    ),
    element:(
      button: (
        font: (
          color: --text-900
        ),
        border: (
          default: --light-600,
          selected: (
            color: --info-900,
            size: 2px
          )
        )
      ),
      input: (
        font: (
          color: --text-900
        )
      )
    ),
  ),
  font:(
    family: "Nunito",
    alternative: "Source Sans Pro",
    icon:"logo-i-font",
    size: 16px,
    size-base: 16px,
    color: var(--text),
    path: "~@logo-software/theme/assets/fonts",
  ),
  grid:(
    status: true,
    columns: 12,
    gutter: 30px,
    breakpoints: (
      xs: 0,
      sm: 576px,
      md: 768px,
      lg: 992px,
      xl: 1200px,
    ),
    container-max-widths: (
      xs: 100%,
      sm: 540px,
      md: 720px,
      lg: 960px,
      xl: 1140px,
    ),
  ),
  border:(
    radius: 2px
  ),
  size:(
    small: (font-size: 12px, icon-size: 12px, height: 24px, icon-container: 24px),
    medium: (font-size: 12px, icon-size: 12px, height: 32px, icon-container: 28px),
    large: (font-size: 14px, icon-size: 20px, height: 48px, icon-container: 46px)
  ),
  state: (
    current: hover active focus,
    default: hover active focus,
    shade: (
      hover: 600,
      active: 700,
      focus: 700
    ),
    tranparency:(
      hover: 0.08,
      active: 0.15,
      focus: 0.15
    ),
    disabled:(
      opacity: 50%
    ),
    selected: (
    )
  ),
  type: fill outline ghost,
  helper:(
    font:(
      shade: 900,
      darkener: 2%
    ),
  ),
  element: (
    input:(
      placeholder:(opacity: 0.5),
      size:(
        small:(padding: 7px),
        medium:(padding: 7px),
        large:(padding: 10px),
      ),
      font: (
        color: --dark-900
      ),
      border: (
        right-color: --basic-700
      )
    ),
    button:(
      size:(
        small:(padding: 8px),
        medium:(padding: 15px),
        large:(padding: 24px),
      ),
      border: (
        right-color: --secondary-700
      )
    ),
    switch:(
      size:(
        small:(width: 38px, circle-padding: 2px),
        medium:(width: 52px, circle-padding: 2px),
        large:(width: 82px, circle-padding: 4px),
      )
    ),
    head: (
      size:(
        small:(h1: 24px, h2: 20px, h3: 18px, h4: 16px, h5: 14px, h6: 12px),
        medium:(h1: 32px, h2: 30px, h3: 28px, h4: 26px, h5: 24px, h6: 22px),
        large: (h1: 48px, h2: 44px, h3: 40px, h4: 38px, h5: 36px, h6: 34px),
        // large: (h1: 36px, h2: 24px, h3: 20px, h4: 18px, h5: 16px, h6: 14px),
        // medium:(h1: 30px, h2: 22px, h3: 18px, h4: 16px, h5: 14px, h6: 12px),
        // small:(h1: 24px, h2: 20px, h3: 16px, h4: 14px, h5: 12px, h6: 10px),
      )
    ),
    paragraph: (
      size:(
        small: (font-size: 12px),
        medium: (font-size: 14px),
        large: (font-size: 16px),
      )
    ),
    modal: (
      header:(
        shadow: "0 0 10px 0 rgba(106, 120, 245, 0.05), 0 5px 5px 0 rgba(106, 120, 245, 0.1)",
        height: 50px
      ),
      footer:(
        shadow: "0 0 10px 0 rgba(106, 120, 245, 0.05), 0 -5px 5px 0 rgba(106, 120, 245, 0.1)",
        height: 52px,
        padding: 0 10px,
      ),
      body:(
        margin: 55px 23px
      ),
    ),
    tab:(align: center, height: null)
  ),
  color: (
    list: (
      brand: #7500ff,
      primary: #0090ff,
      secondary: #dde8f7,
      basic: #f2f4f9, // #a1b9d1, // #75899e, //#cdd7e2, //#f2f4f9,
      light: #ffffff,
      dark: #6a6a6a,
      gray: #cccccc,
      info: #0090ff,
      danger: #ff3e51,
      warning: #f8aa1c,
      success: #01cc78,
      text: #858585
    ),
    semantic: info danger warning success,
    shades:(
      100: 90%,
      200: 80%,
      300: 60%,
      400: 30%,
      500: 0%,
      600: 5%, // 8
      700: 10%, // 15
      800: 20%, // 25
      900: 40%,
      1000: 60%
    )
  ),
  bootstrap:(
    status: false,
    color-map:(
      primary: primary,
      secondary: secondary,
      success: success,
      danger: danger,
      warning: warning,
      info: info,
      light: light,
      dark: dark
    )
  ),
  vaadin:(
    status: false,
    color-map:(
      friendly: success,
    ),
    size-map:(
      tiny: small,
      huge: large,
    )
  ),
  debug: false,
  extend-colors: true,
), $config, true);

$color-state: map-get(map-get($config, color), list);
$color-semantic: ();
@each $item in get("color.semantic") {
  $color-semantic: map-merge($color-semantic, ($item: map-get($color-state, $item)));
  $color-state: map-remove($color-state, $item);
}

$color-list: map-merge($color-state, $color-semantic);
$config: deep-map-merge((color:(state: map-keys($color-state), list: $color-list)), $config, true);

$colors: ();

@if get("debug")==false {
}
