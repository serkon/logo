/*
* Copyright 2017 HepsiExpress Limited. All Rights Reserved.
*
* Save to the extent permitted by law, you may not use, copy, modify,
* distribute or create derivative works of this material or any part
* of it without the prior written consent of HepsiExpress Limited.
* Any reproduction of this material must contain this notice.
*/

@function size($size) {
  @return $size;
}

@mixin animate( $event: all, $time:0.2s, $animate:linear) {
  transition: $event $time $animate;
}

:host {
  width: 100%;
  height: 100%;
  display: block;

  $le-drawer-color: #a5abb2;
  $le-drawer-line-height: var(--drawer-height);

  --drawer-width-md: 40vw;
  --drawer-width-sm: 85vw;

  .drawer-left {
    @include animate();

    position: absolute;
    width: var(--drawer-width);
    transform: translateX(0);
    top: 0;
    bottom: 0;
    left: 0;
    background-color: var(--drawer-left);
    overflow: hidden;

    @media (max-width: 768px) {
      width: var(--drawer-width-md);
    }

    @media (max-width: 576px) {
      width: var(--drawer-width-sm);
    }
  }

  .drawer-content {
    @include animate();

    position: absolute;
    left: var(--drawer-width);
    right: 0;
    top: 0;
    height: 100%;
    overflow-x: hidden;
    background-color: var(--drawer-right);

    @media (max-width: 768px) {
      left: var(--drawer-width-md);
    }

    @media (max-width: 576px) {
      left: var(--drawer-width-sm);
    }

    header.drawer-top {
      position: relative;
      border-bottom: size(1px) solid var(--drawer-top-bottom);
      box-sizing: border-box;
      font-size: size(14px);
      background-color: var(--drawer-top);
      height: var(--drawer-height);
      text-overflow: ellipsis;
      display: flex;
      align-items: center;
      z-index: 2;

      a.drawer-menu {
        position: relative;
        margin: 0 10px;
        width: 48px;
        height: 48px;
        cursor: pointer;
        z-index: 1;

        &::before {
          height: 100%;
          width: 100%;
        }
      }
    }

    main.drawer-right {
      position: absolute;
      padding: size(20px);
      top: var(--drawer-top-height);
      left: 0;
      bottom: 0;
      right: 0;
      //overflow: auto;
      overflow-x: hidden;
      overflow-y: auto;

      .drawer-main-top {
        position: absolute;
        top: 0;
      }
    }
  }

  .drawer-closed {
    @include animate();

    transform: translateX(size(-80px));
  }

  .drawer-closed ~ .drawer-content {
    @include animate();

    left: 0;
  }
}
